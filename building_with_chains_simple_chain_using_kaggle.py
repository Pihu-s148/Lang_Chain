# -*- coding: utf-8 -*-
"""Building_With_Chains_Simple_Chain_Using_Kaggle.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_zGrxPllbGNlphwoyUYRfENMO2NbjGQt

### Step 1: Install Required Libraries

In the first cell of your Colab notebook, install the necessary libraries. LangChain and OpenAI are the primary libraries needed.
"""

!pip install langchain_community openai kagglehub

"""- **LangChain**: A framework for building applications with language models.

- **OpenAI**: The library to interact with OpenAI's language models.

### Step 2: Import Libraries and Set Up OpenAI API Key

In the next cell, import the necessary modules and set up your OpenAI API key. You need to replace `"YOUR_API_KEY"` with your actual OpenAI API key.
"""

from langchain.chains import LLMChain
from langchain.llms import OpenAI
from langchain.prompts import PromptTemplate
import langchain
import kagglehub
import os
import pandas as pd

# Set your OpenAI API key
os.environ["OPENAI_API_KEY"] = "YOUR_API_KEY"

"""- **OpenAI API Key**: This key is required to authenticate your requests to OpenAI's API. You can obtain it from [OpenAI's website](https://auth.openai.com/authorize?issuer=auth0.openai.com&client_id=DRivsnm2Mu42T3KOpqdtwB3NYviHYzwD&audience=https%3A%2F%2Fapi.openai.com%2Fv1&redirect_uri=https%3A%2F%2Fplatform.openai.com%2Fauth%2Fcallback&device_id=70c25419-0a68-4868-aaa0-6ac95051c26a&screen_hint=signup&max_age=0&scope=openid+profile+email+offline_access&response_type=code&response_mode=query&state=WEtzQ3ZIcV9RUW5uNGZYTUc3OU9Lak00fmZHQ3dlMzh%2BNlBZbjh1fi5%2BMA%3D%3D&nonce=Q0Y2Y0hocmpKQXZUWTFNQnNIckpKMFdBSnBXZEM1akF5Y2VkeXE3MWpjOA%3D%3D&code_challenge=cMl19UnF6Bn7h2FKgCKo6Ax_7W8LDvAeIP6PTm_gOC8&code_challenge_method=S256&auth0Client=eyJuYW1lIjoiYXV0aDAtc3BhLWpzIiwidmVyc2lvbiI6IjEuMjEuMCJ9&flow=control).

### Step 3: Set Up The Kaggle Dataset

In the next cell, import the kaggle dataset.
"""

file=kagglehub.dataset_download("niraliivaghani/flipkart-product-customer-reviews-dataset")
print("Path to the file: ",file)

# Find the correct CSV file in the directory
dataset_directory = file # This is the directory returned by kagglehub
csv_files = [f for f in os.listdir(dataset_directory) if f.endswith('.csv')]

if len(csv_files) == 0:
    raise FileNotFoundError("No CSV files found in the dataset directory.")
elif len(csv_files) > 1:
    print("Multiple CSV files found. Using the first one:", csv_files[0])

# Construct the full path to the CSV file
csv_path = os.path.join(dataset_directory, csv_files[0])

# Load the dataset into a pandas DataFrame
df = pd.read_csv(csv_path)
print("Dataset loaded successfully.")


print(df.head(10))

"""
### Step 4: Define and Run the Chain

In the next cell, define a simple chain using LangChain and run it."""

# Simple Chain
prompt = PromptTemplate(
    template="What was the review for the {product_name}?",
)
chain = LLMChain(llm=OpenAI(), prompt=prompt)

# Run the chain
product_name = "Candes 12 L Room/Personal Air Cooler"
chain.invoke(product_name)

"""- **Prompt**: The input text that you provide to the language model. In this case, it's a request to generate a marketing email.

- **LLMChain**: A LangChain object that manages the interaction with the language model. It takes a language model (`llm`) and a `prompt`.

- **Run the Chain**: The `run` method executes the chain and returns the response from the language model.

### Additional Resources

- **LangChain Documentation**: [LangChain Docs](https://langchain.readthedocs.io/en/latest/)

- **OpenAI API Documentation**: [OpenAI API Docs](https://platform.openai.com/docs/api-reference/introduction)
"""