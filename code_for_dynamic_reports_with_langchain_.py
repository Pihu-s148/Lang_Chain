# -*- coding: utf-8 -*-
"""Code_for_Dynamic_Reports_with_Langchain_.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JAjbsrV7IVGD8WJZi83sZhfMoivGK3Ly

### Step 1: Install Required Libraries

In the first cell of your Colab notebook, install the necessary libraries. LangChain and OpenAI are the primary libraries needed.
"""

!pip install langchain_community

!pip install httpx==0.23.0

"""- **LangChain**: A framework for building applications with language models.

### Step 2: **Import Libraries**

After installing the library, import the necessary modules for your code.
"""

from langchain.llms import OpenAI
from langchain import LLMChain
from langchain.prompts import PromptTemplate

"""
### Step 3: **Set Up OpenAI API Key**

You'll need an OpenAI API key to access the language model. You can obtain this key from [OpenAI's website](https://openai.com/api/). Once you have the key, set it in your environment."""

# Set your OpenAI API key
import os
os.environ["OPENAI_API_KEY"] ="YOUR_OPENAI_API_KEY"

"""
#### Step 4: **Define the Prompt and Chain with Input Data**

Create a prompt and set up the LangChain to generate the sales report.

We'll simulate sales data as a dictionary and pass it to the language model.

"""

# Simulated sales data
sales_data = {
    "Q1": {"revenue": 150000, "units_sold": 1200, "top_product": "Product A"},
    "Q2": {"revenue": 175000, "units_sold": 1300, "top_product": "Product B"},
    "Q3": {"revenue": 160000, "units_sold": 1250, "top_product": "Product C"},
    "Q4": {"revenue": 180000, "units_sold": 1350, "top_product": "Product A"},
}

# Define the prompt with placeholders for data
report_prompt = """
Generate a sales report for last quarter.
Revenue: {revenue}
Units Sold: {units_sold}
Top Product: {top_product}
"""

# Create a prompt template
prompt_template = PromptTemplate.from_template(report_prompt)

# Set up the LLMChain
chain = LLMChain(llm=OpenAI(), prompt=prompt_template)

"""
### Step 5: **Run the Chain and Print the Response**

Select the data for the last quarter and run the chain."""

# Select data for the last quarter (Q4 in this example)
last_quarter_data = sales_data["Q4"]

# Run the chain with the last quarter's data
response = chain.invoke(last_quarter_data)

# Print the response
print(response)

"""
### Additional Resources

- **OpenAI API Documentation**: [OpenAI API Docs](https://beta.openai.com/docs/)
- **Langchain GitHub**: [Langchain GitHub](https://github.com/langchain/langchain)"""